{"ast":null,"code":"var _jsxFileName = \"/Users/kuryshchuk/Work/JustIt/react-form/frontend/src/Components/FormComponent.tsx\",\n  _s = $RefreshSig$();\n// src/FormComponent.tsx\nimport React, { useState } from 'react';\n\n// Визначимо інтерфейс для даних форми\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponent = () => {\n  _s();\n  // Ініціалізація стану з використанням TypeScript\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n\n  // Обробка змін у полях форми\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Обробка надсилання форми\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/form', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        alert('Form submitted successfully!');\n        setFormData({\n          name: '',\n          email: '',\n          phone: ''\n        });\n      } else {\n        alert('Error submitting the form');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        value: formData.phone,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(FormComponent, \"CHp9HHTi3cbuR8atkxCknBqzV4M=\");\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormComponent","_s","formData","setFormData","name","email","phone","handleChange","e","value","target","prev","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","onSubmit","children","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kuryshchuk/Work/JustIt/react-form/frontend/src/Components/FormComponent.tsx"],"sourcesContent":["// src/FormComponent.tsx\nimport React, { useState } from 'react';\n\n// Визначимо інтерфейс для даних форми\ninterface FormData {\n  name: string;\n  email: string;\n  phone: string;\n}\n\nconst FormComponent: React.FC = () => {\n  // Ініціалізація стану з використанням TypeScript\n  const [formData, setFormData] = useState<FormData>({\n    name: '',\n    email: '',\n    phone: '',\n  });\n\n  // Обробка змін у полях форми\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // Обробка надсилання форми\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/form', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n      if (response.ok) {\n        alert('Form submitted successfully!');\n        setFormData({ name: '', email: '', phone: '' });\n      } else {\n        alert('Error submitting the form');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label>\n        Email:\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label>\n        Phone:\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={formData.phone}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default FormComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAW;IACjDO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAIC,CAAsC,IAAK;IAC/D,MAAM;MAAEJ,IAAI;MAAEK;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCP,WAAW,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACP,IAAI,GAAGK;IAAM,CAAC,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAOJ,CAAkB,IAAK;IACjDA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;MAC/B,CAAC,CAAC;MACF,IAAIY,QAAQ,CAACO,EAAE,EAAE;QACfC,KAAK,CAAC,8BAA8B,CAAC;QACrCnB,WAAW,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC,CAAC;MACjD,CAAC,MAAM;QACLgB,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACExB,OAAA;IAAM0B,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBAC3B3B,OAAA;MAAA2B,QAAA,GAAO,OAEL,eAAA3B,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXvB,IAAI,EAAC,MAAM;QACXK,KAAK,EAAEP,QAAQ,CAACE,IAAK;QACrBwB,QAAQ,EAAErB,YAAa;QACvBsB,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlC,OAAA;MAAA2B,QAAA,GAAO,QAEL,eAAA3B,OAAA;QACE4B,IAAI,EAAC,OAAO;QACZvB,IAAI,EAAC,OAAO;QACZK,KAAK,EAAEP,QAAQ,CAACG,KAAM;QACtBuB,QAAQ,EAAErB,YAAa;QACvBsB,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlC,OAAA;MAAA2B,QAAA,GAAO,QAEL,eAAA3B,OAAA;QACE4B,IAAI,EAAC,KAAK;QACVvB,IAAI,EAAC,OAAO;QACZK,KAAK,EAAEP,QAAQ,CAACI,KAAM;QACtBsB,QAAQ,EAAErB,YAAa;QACvBsB,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAChC,EAAA,CArEID,aAAuB;AAAAkC,EAAA,GAAvBlC,aAAuB;AAuE7B,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}